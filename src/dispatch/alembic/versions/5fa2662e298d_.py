"""Added item_inventory, item, depot

Revision ID: 5fa2662e298d
Revises: 6fbebd4901a8
Create Date: 2021-10-21 08:59:10.699894

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = '5fa2662e298d'
down_revision = '6fbebd4901a8'
branch_labels = "added inventory tables"
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('flex_form_data', sa.JSON(), nullable=True),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', 'org_id', name='uix_org_id_item_code')
    )
    op.create_index('ix_item_search_vector', 'item', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_table('depot',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.BigInteger(), nullable=True),
    sa.Column('flex_form_data', sa.JSON(), nullable=True),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', 'org_id', name='uix_org_id_depot_code')
    )
    op.create_index('ix_depot_search_vector', 'depot', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_table('item_inventory',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('depot_id', sa.Integer(), nullable=True),
    sa.Column('max_qty', sa.Float(), nullable=False),
    sa.Column('qty', sa.Float(), nullable=False),
    sa.Column('search_vector', sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['depot_id'], ['depot.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_id', 'depot_id', 'org_id', name='uix_org_id_inventory_item_depot')
    )
    op.create_index('ix_item_inventory_search_vector', 'item_inventory', ['search_vector'], unique=False, postgresql_using='gin')
    op.alter_column('worker', 'code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('worker', 'code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index('ix_item_inventory_search_vector', table_name='item_inventory')
    op.drop_table('item_inventory')
    op.drop_index('ix_depot_search_vector', table_name='depot')
    op.drop_table('depot')
    op.drop_index('ix_item_search_vector', table_name='item')
    op.drop_table('item')
    # ### end Alembic commands ###
